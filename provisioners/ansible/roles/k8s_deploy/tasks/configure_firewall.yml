---
- changed_when: false
  failed_when: (lan_subnet.rc != 0) or (lan_subnet.stderr != '')
  name: 'configure_firewall : Find server LAN subnet'
  register: lan_subnet
  shell:
    cmd: >-
      ip addr show {{ k8s_deploy_group.lan_adapter }} | awk '{if ($1 == "inet")
      print $2}'
    executable: bash
- changed_when: false
  name: 'configure_firewall : Find DNS servers'
  register: dns_servers
  shell:
    cmd: grep --only-matching --perl-regexp '(?<=nameserver\s).*' /etc/resolv.conf
    executable: bash
- name: 'configure_firewall : Deny routed traffic by default'
  ufw:
    default: deny
    direction: routed
- name: 'configure_firewall : Allow API server access from LAN on masters'
  ufw:
    direction: in
    from_ip: '{{ lan_subnet.stdout }}'
    proto: tcp
    rule: allow
    to_port: '6443'
  when: '"masters" in group_names'
- name: 'configure_firewall : Allow Kubelet API access from pod network'
  ufw:
    direction: in
    from_ip: '{{ k8s_deploy_role.pod_network_cidr }}'
    proto: tcp
    rule: allow
    to_port: '6443'
- name: 'configure_firewall : Allow Kubelet API access from LAN'
  ufw:
    direction: in
    from_ip: '{{ lan_subnet.stdout }}'
    proto: tcp
    rule: allow
    to_port: '10250'
- name: 'configure_firewall : Allow pod to pod and outgoing pod traffic'
  ufw:
    from_ip: '{{ k8s_deploy_role.pod_network_cidr }}'
    proto: any
    route: 'yes'
    rule: allow
- name: 'configure_firewall : Allow all access to node ports (tcp)'
  ufw:
    direction: in
    proto: tcp
    rule: allow
    to_port: '30000:32767'
- name: 'configure_firewall : Allow all access to node ports (udp)'
  ufw:
    direction: in
    proto: udp
    rule: allow
    to_port: '30000:32767'
