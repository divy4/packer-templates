#!/usr/bin/env bash
set -euo pipefail

NETWORK_DEVICE=enp0s3

declare -A SETTINGS
SETTINGS['00:00:03:00:00:01']='bld cache.bld.danivy.com common_deploy.yml'
SETTINGS['00:01:01:00:00:01']='dev dev.dev.danivy.com common_deploy.yml development_deploy.yml'
SETTINGS['00:01:02:01:00:01']='dev k8s.dev.danivy.com common_deploy.yml k8s_deploy.yml'
SETTINGS['00:02:01:00:00:01']='stg dev.stg.danivy.com common_deploy.yml development_deploy.yml'
SETTINGS['00:02:02:01:00:01']='stg k8s.stg.danivy.com common_deploy.yml k8s_deploy.yml'
SETTINGS['00:03:01:00:00:01']='prd dev.prd.danivy.com common_deploy.yml development_deploy.yml'
SETTINGS['00:03:02:01:00:01']='prd k8s.prd.danivy.com common_deploy.yml k8s_deploy.yml'
SETTINGS['00:04:01:00:00:01']='wrk dev.wrk.danivy.com common_deploy.yml development_deploy.yml'

function main {
  local settings inventory hostname roles
  echo "Starting packer trigger at $(date)"
  # Figure out who I am
  #shellcheck disable=SC2207
  settings=( $(get_settings) )
  inventory="${settings[0]}"
  hostname="${settings[1]}"
  roles=("${settings[@]:2}")
  # Execute ansible
  cd /packer/ansible
  ansible-playbook --inventory "$inventory" --limit "$hostname" --extra-vars \
    ansible_connection=local "${roles[@]}" packer_trigger_deploy.yml
  # Cleanup
  cd /
  rm --force --recursive /packer/ansible
  echo "Packer trigger finished successfully at $(date)"
  sleep 5 && rm "${BASH_SOURCE[0]}" &
}

function get_settings {
  local address
  address="$(get_mac_address)"
  echo "${SETTINGS[$address]}"
}

function get_mac_address {
  cat "/sys/class/net/$NETWORK_DEVICE/address"
}

# Unused right now, but useful if I want to switch back to IP-based assignment
function get_ip_address {
  ip addr show "$NETWORK_DEVICE" | awk '$1 == "inet" {print $2}'
}

main 2>&1 | tee --append /var/log/packer-trigger
